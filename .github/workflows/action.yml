# 워크플로우 -> 자동화 할 작업의 설계서 -> action.yml
#

# name: first workflow
# on: push # 이벤트 트리거
# env:
#     GITHUB_REPOSITORY, GITHUB_SHAGITHUB_REF
# jobs: # jobs:
#     lint-test-build:
#         runs-on: ubuntu-latest
#         env:
#             JOB_LEVEL_ENV: "job level 환경변수"

#         steps:
#             - name: Print Environment Variables
#               run: echo "$ {{ env.NEXT_PUBLIC_SUPABASE_URL }}"
#     print-env:
#         runs-on: ubuntu-latest
#         steps:
#             - name: env test
#               run: echo "$ {{ env.JOB_LEVEL_ENV }}"

name: first workflow
on: push # 이벤트 트리거
jobs: # jobs:
    lint-test-build:
        runs-on: ubuntu-latest
        env:
            JOB_LEVEL_ENV: "job level 환경변수"
        steps:
            - name: Print Environment Variables
              run: ｜
                  echo "JOB_LEVEL_ENV ${{ env.JOB_LEVEL_ENV}} "
                  echo "Secret ${{ secrets.TEST_SECRET}} "

    # lint:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: checkout code
    #           uses: actions/checkout@v4

    #         - name: install nodejs
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: "22"

    #         - name: install dependencies
    #           run: npm ci

    #         - name: run lint
    #           run: npm run lint

    # test:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: checkout Code
    #           uses: actions/checkout@v4

    #         - name: install nodejs
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: "22"

    #         - name: install dependencies
    #           run: npm ci

    #         - name: run test
    #           run: npm run test

    # # lint -> build
    # build: # job의 이름
    #     runs-on: ubuntu-latest

    #     # build job 이전에 lint job이 선행되어야함
    #     # 순차적으로 실행이 되어야함
    #     # 단일 선행 작업 -> needs: <job name>
    #     # 하나 이상의 선행작업이 필요하면 needs: [<job name1>, <job name2>]
    #     needs: [lint, test]
    #     steps: # step 정의
    #         - name: checkout Code
    #           uses: actions/checkout@v4 # action -> 재사용가능한 작업

    #           # 노드 버전을 맞춰야 할 경우에 가상환경에 노드를 추가 설치
    #         - name: install nodejs
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: "22"

    #         - name: install dependencies
    #           run: npm ci # ci -> clean install -> package-lock.json

    #         - name: run build
    #           run: npm run build
#   [New file]
#   basic_ci.yml
# name: Basic CI
# on:
#     push:
#         branches: [main]
#     pull_request:
#         branches: [main]

# jobs:
#     ci:
#         runs-on: ubuntu-latest
#         steps:
#             - name: checkout code
#               uses: actions/checkout@v4

#             - name: setup Node.js
#               uses: actions/setup-node@v4
#               with:
#                   node-version: "18"
#                   cache: "npm"

#             - name: Install dependencies
#               run: npm ci

#             - name: run test
#               run: npm test

#             - name: Build project
#               run: npm run build
